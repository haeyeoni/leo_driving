<launch>
    <param name="/use_sim_time" value="false"/>
    <arg name="use_rp" default="true"/>
    <arg name="use_velo" default="true"/>
    <arg name="use_joy" default="false"/>
    <arg name="use_static_tf" default="true"/>

  <node pkg="gmapping" name="slam_gmapping" type="slam_gmapping" output="screen">
    <param name="delta" value="0.02"/>
    <param name="xmin" value="-20"/>
    <param name="xmax" value="20"/>
    <param name="ymin" value="-20"/>
    <param name="ymax" value="20"/>
    <!--remap from="scan" to="scan"/-->
    <param name="base_frame" value="base_link" />
    <param name="odom_frame" value="odom" />

    <param name="linearUpdate" value="0.1"/>
    <param name="angularUpdate" value="0.1"/>
    <param name="temporalUpdate" value="-1.0"/>
    <param name="resampleThreshold" value="0.5"/>
    <param name="particles" value="80"/>
    <rosparam>
      odom_frame: odom
      map_update_interval: 5.0
      maxUrange: 4.0
      maxRange: 5.0
      sigma: 0.05
      kernelSize: 1
      lstep: 0.05
      astep: 0.05
      iterations: 5
      lsigma: 0.075
      ogain: 3.0
      lskip: 0
      linearUpdate: 0.1
      angularUpdate: 0.1
      temporalUpdate: -1.0
      resampleThreshold: 0.5
      particles: 80
      xmin: -10.0
      ymin: -10.0
      xmax: 10.0
      ymax: 10.0
      delta: 0.02
      llsamplerange: 0.01
      llsamplestep: 0.01
      lasamplerange: 0.005
      lasamplestep: 0.005
      base_frame: base_link
    </rosparam>
  </node>


    <node type="rviz" name="rviz" pkg="rviz" args="-d $(find leo_driving)/rviz/view_point.rviz"/>
    <node if="$(arg use_rp)" name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode" output="screen">
        <param name="serial_port"         type="string" value="/dev/rplidar"/>
        <param name="serial_baudrate"     type="int"    value="115200"/><!--A1/A2 -->
        <!--param name="serial_baudrate"     type="int"    value="256000"--><!--A3 -->
        <param name="frame_id"            type="string" value="laser"/>
        <param name="inverted"            type="bool"   value="false"/>
        <param name="angle_compensate"    type="bool"   value="true"/>
        <param name="output_scan"         type="string" value="/up_scan"/>
    </node>

    <include if="$(arg use_velo)" file="$(find velodyne_pointcloud)/launch/VLP16_points.launch"/>
    <include if="$(arg use_joy)" file="$(find teleop_twist_joy)/launch/teleop.launch"/>
    
    <node pkg="rostopic" type="rostopic" name="arbitrary_name" args="pub /pkg_topic pkg_executable_file/message" output="screen"/>
    <node pkg="nodelet" type="nodelet" name="nodelet_manager"  args="manager" output="screen"/>
    <node pkg="nodelet" type="nodelet" name="AisleDetectNode_loader" args="load auto_driving/AisleDetectNode nodelet_manager" output="screen"/> 
    <node pkg="nodelet" type="nodelet" name="ObstaclesNode_loader" args="load auto_driving/ObstaclesNode nodelet_manager" output="screen"/>
    <node pkg="nodelet" type="nodelet" name="CmdPublishNode_loader" args="load auto_driving/CmdPublishNode nodelet_manager" output="screen"/>
    <node pkg="nodelet" type="nodelet" name="LocalizationNode_loader" args="load auto_driving/LocalizationNode nodelet_manager" output="screen"/>

    <node if="$(arg use_static_tf)" pkg="tf" type="static_transform_publisher" name="base_link_to_rp" args="0 0 0 3.141592 0 0 base_link laser 100" />
    <node if="$(arg use_static_tf)" pkg="tf" type="static_transform_publisher" name="base_link_to_velo" args="0 0 0 0 0 0 base_link velodyne 100" />
    <node if="$(arg use_static_tf)" pkg="tf" type="static_transform_publisher" name="base_link_to_imu" args="0 0 0 0.0 0 0 base_link imu 100" />

</launch>