<launch>
    <param name="/use_sim_time" value="false"/>
    <arg name="use_rp" default="true"/>
    <arg name="use_velo" default="true"/>
    <arg name="use_joy" default="true"/>
    <arg name="use_static_tf" default="true"/>
    <arg name="map_file" default="/xavier_ssd/godus_ws/map/eng2.yaml"/>

    <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />
    <node name="amcl" pkg="amcl" type="amcl" clear_params="true" output="screen">
        <rosparam command="load" file="$(find leo_driving)/config/amcl.yaml"/>
    </node>

    <!--node type="rviz" name="rviz" pkg="rviz" args="-d $(find leo_driving)/rviz/view_data.rviz"/-->

    <node if="$(arg use_rp)" name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode" output="screen">
        <param name="serial_port"         type="string" value="/dev/rplidar"/>
        <param name="serial_baudrate"     type="int"    value="115200"/><!--A1/A2 -->
        <!--param name="serial_baudrate"     type="int"    value="256000"--><!--A3 -->
        <param name="frame_id"            type="string" value="laser"/>
        <param name="inverted"            type="bool"   value="false"/>
        <param name="angle_compensate"    type="bool"   value="true"/>
        <remap from="/scan" to="/rp/scan"/>
    </node>

    <include if="$(arg use_velo)" file="$(find velodyne_pointcloud)/launch/VLP16_points.launch"/>
    <include if="$(arg use_joy)" file="$(find teleop_twist_joy)/launch/teleop.launch"/>
    
    <!-- LEO_DRIVING PACKAGE-->
    <node pkg="rostopic" type="rostopic" name="lidar_driving_trigger" args="pub -r 10 /lidar_driving std_msgs/Bool true" output="screen"/>
    <node pkg="nodelet" type="nodelet" name="nodelet_manager"  args="manager" output="screen"/>
    
    <node pkg="nodelet" type="nodelet" name="AisleDetectNode_loader" args="load auto_driving/AisleDetectNode nodelet_manager" output="screen">
        <rosparam command="load" file="$(find leo_driving)/config/aisle_detect.yaml"/>
    </node>

    <node pkg="nodelet" type="nodelet" name="ObstaclesNode_loader" args="load auto_driving/ObstaclesNode nodelet_manager" output="screen">
        <rosparam command="load" file="$(find leo_driving)/config/obstacles.yaml"/>
    </node>

    <node pkg="nodelet" type="nodelet" name="CmdPublishNode_loader" args="load auto_driving/CmdPublishNode nodelet_manager" output="screen">
        <rosparam command="load" file="$(find leo_driving)/config/cmd_publish.yaml"/>
        <param name="amcl_driving" value="true"/>
	<remap from="/joystick" to="/joy"/>
    </node>

    
    <!-- STATIC TF PUBLISHER -->
    <node if="$(arg use_static_tf)" pkg="tf" type="static_transform_publisher" name="base_link_to_rp" args="0 0 0 3.141592 0 0 base_link laser 100" />
    <node if="$(arg use_static_tf)" pkg="tf" type="static_transform_publisher" name="base_link_to_velo" args="0 0 0 0 0 0 base_link velodyne 100" />
    <node if="$(arg use_static_tf)" pkg="tf" type="static_transform_publisher" name="base_link_to_imu" args="0 0 0 0.0 0 0 base_link imu 100" />
    <node if="$(arg use_static_tf)" pkg="tf" type="static_transform_publisher" name="map_to_odom" args="0 0 0 0.0 0 0 map odom 100" />


</launch>
